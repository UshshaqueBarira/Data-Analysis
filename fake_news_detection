import pandas as pd
import numpy as np
import itertools
import sklearn
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix

df=pd.read_csv('../demo/news.csv')

df.head()
df.shape

#label is the column name in the dataset for the categorization
labels= df.label
labels.head()

x_train,x_test,y_train,y_test=train_test_split(df['text'],labels,test_size=0.2,random_state=7)

x_train.head()

tfidf_vectorizer=TfidfVectorizer(stop_words='english', max_df=0.9)
tfidf_train=tfidf_vectorizer.fit_transform(x_train)
tfidf_test=tfidf_vectorizer.transform(x_test)

pac=PassiveAggressiveClassifier(max_iter=70)
pac.fit(tfidf_train,y_train)
y_pred=pac.predict(tfidf_test)
score=accuracy_score(y_test,y_pred)
print(f'Accuracy: {round(score*100,2)}%')

OUTPUT: Accuracy: 92.98%

#A combination of true positives, false positives, true negatives, false negatives
confusion_matrix(y_test,y_pred,labels=['FAKE','REAL'])

OUTPUT:
array([[592,  46],
       [ 43, 586]])

